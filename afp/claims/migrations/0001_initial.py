# Generated by Django 4.1 on 2022-11-29 04:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ArticleType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter an article type.",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=2,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AwardLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter an award level (e.g. Local, Hospital, etc.)",
                        max_length=50,
                        unique=True,
                        verbose_name="Award Level",
                    ),
                ),
                (
                    "value",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3000),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExamType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter an exam type.",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Grant",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[
                            ("XUA", "ADB Unit of Account"),
                            ("AFN", "Afghan Afghani"),
                            ("AFA", "Afghan Afghani (1927–2002)"),
                            ("ALL", "Albanian Lek"),
                            ("ALK", "Albanian Lek (1946–1965)"),
                            ("DZD", "Algerian Dinar"),
                            ("ADP", "Andorran Peseta"),
                            ("AOA", "Angolan Kwanza"),
                            ("AOK", "Angolan Kwanza (1977–1991)"),
                            ("AON", "Angolan New Kwanza (1990–2000)"),
                            ("AOR", "Angolan Readjusted Kwanza (1995–1999)"),
                            ("ARA", "Argentine Austral"),
                            ("ARS", "Argentine Peso"),
                            ("ARM", "Argentine Peso (1881–1970)"),
                            ("ARP", "Argentine Peso (1983–1985)"),
                            ("ARL", "Argentine Peso Ley (1970–1983)"),
                            ("AMD", "Armenian Dram"),
                            ("AWG", "Aruban Florin"),
                            ("AUD", "Australian Dollar"),
                            ("ATS", "Austrian Schilling"),
                            ("AZN", "Azerbaijani Manat"),
                            ("AZM", "Azerbaijani Manat (1993–2006)"),
                            ("BSD", "Bahamian Dollar"),
                            ("BHD", "Bahraini Dinar"),
                            ("BDT", "Bangladeshi Taka"),
                            ("BBD", "Barbadian Dollar"),
                            ("BYN", "Belarusian Ruble"),
                            ("BYB", "Belarusian Ruble (1994–1999)"),
                            ("BYR", "Belarusian Ruble (2000–2016)"),
                            ("BEF", "Belgian Franc"),
                            ("BEC", "Belgian Franc (convertible)"),
                            ("BEL", "Belgian Franc (financial)"),
                            ("BZD", "Belize Dollar"),
                            ("BMD", "Bermudan Dollar"),
                            ("BTN", "Bhutanese Ngultrum"),
                            ("BOB", "Bolivian Boliviano"),
                            ("BOL", "Bolivian Boliviano (1863–1963)"),
                            ("BOV", "Bolivian Mvdol"),
                            ("BOP", "Bolivian Peso"),
                            ("BAM", "Bosnia-Herzegovina Convertible Mark"),
                            ("BAD", "Bosnia-Herzegovina Dinar (1992–1994)"),
                            (
                                "BAN",
                                "Bosnia-Herzegovina New Dinar (1994–1997)",
                            ),
                            ("BWP", "Botswanan Pula"),
                            ("BRC", "Brazilian Cruzado (1986–1989)"),
                            ("BRZ", "Brazilian Cruzeiro (1942–1967)"),
                            ("BRE", "Brazilian Cruzeiro (1990–1993)"),
                            ("BRR", "Brazilian Cruzeiro (1993–1994)"),
                            ("BRN", "Brazilian New Cruzado (1989–1990)"),
                            ("BRB", "Brazilian New Cruzeiro (1967–1986)"),
                            ("BRL", "Brazilian Real"),
                            ("GBP", "British Pound"),
                            ("BND", "Brunei Dollar"),
                            ("BGL", "Bulgarian Hard Lev"),
                            ("BGN", "Bulgarian Lev"),
                            ("BGO", "Bulgarian Lev (1879–1952)"),
                            ("BGM", "Bulgarian Socialist Lev"),
                            ("BUK", "Burmese Kyat"),
                            ("BIF", "Burundian Franc"),
                            ("XPF", "CFP Franc"),
                            ("KHR", "Cambodian Riel"),
                            ("CAD", "Canadian Dollar"),
                            ("CVE", "Cape Verdean Escudo"),
                            ("KYD", "Cayman Islands Dollar"),
                            ("XAF", "Central African CFA Franc"),
                            ("CLE", "Chilean Escudo"),
                            ("CLP", "Chilean Peso"),
                            ("CLF", "Chilean Unit of Account (UF)"),
                            ("CNX", "Chinese People’s Bank Dollar"),
                            ("CNY", "Chinese Yuan"),
                            ("CNH", "Chinese Yuan (offshore)"),
                            ("COP", "Colombian Peso"),
                            ("COU", "Colombian Real Value Unit"),
                            ("KMF", "Comorian Franc"),
                            ("CDF", "Congolese Franc"),
                            ("CRC", "Costa Rican Colón"),
                            ("HRD", "Croatian Dinar"),
                            ("HRK", "Croatian Kuna"),
                            ("CUC", "Cuban Convertible Peso"),
                            ("CUP", "Cuban Peso"),
                            ("CYP", "Cypriot Pound"),
                            ("CZK", "Czech Koruna"),
                            ("CSK", "Czechoslovak Hard Koruna"),
                            ("DKK", "Danish Krone"),
                            ("DJF", "Djiboutian Franc"),
                            ("DOP", "Dominican Peso"),
                            ("NLG", "Dutch Guilder"),
                            ("XCD", "East Caribbean Dollar"),
                            ("DDM", "East German Mark"),
                            ("ECS", "Ecuadorian Sucre"),
                            ("ECV", "Ecuadorian Unit of Constant Value"),
                            ("EGP", "Egyptian Pound"),
                            ("GQE", "Equatorial Guinean Ekwele"),
                            ("ERN", "Eritrean Nakfa"),
                            ("EEK", "Estonian Kroon"),
                            ("ETB", "Ethiopian Birr"),
                            ("EUR", "Euro"),
                            ("XBA", "European Composite Unit"),
                            ("XEU", "European Currency Unit"),
                            ("XBB", "European Monetary Unit"),
                            ("XBC", "European Unit of Account (XBC)"),
                            ("XBD", "European Unit of Account (XBD)"),
                            ("FKP", "Falkland Islands Pound"),
                            ("FJD", "Fijian Dollar"),
                            ("FIM", "Finnish Markka"),
                            ("FRF", "French Franc"),
                            ("XFO", "French Gold Franc"),
                            ("XFU", "French UIC-Franc"),
                            ("GMD", "Gambian Dalasi"),
                            ("GEK", "Georgian Kupon Larit"),
                            ("GEL", "Georgian Lari"),
                            ("DEM", "German Mark"),
                            ("GHS", "Ghanaian Cedi"),
                            ("GHC", "Ghanaian Cedi (1979–2007)"),
                            ("GIP", "Gibraltar Pound"),
                            ("XAU", "Gold"),
                            ("GRD", "Greek Drachma"),
                            ("GTQ", "Guatemalan Quetzal"),
                            ("GWP", "Guinea-Bissau Peso"),
                            ("GNF", "Guinean Franc"),
                            ("GNS", "Guinean Syli"),
                            ("GYD", "Guyanaese Dollar"),
                            ("HTG", "Haitian Gourde"),
                            ("HNL", "Honduran Lempira"),
                            ("HKD", "Hong Kong Dollar"),
                            ("HUF", "Hungarian Forint"),
                            ("IMP", "IMP"),
                            ("ISK", "Icelandic Króna"),
                            ("ISJ", "Icelandic Króna (1918–1981)"),
                            ("INR", "Indian Rupee"),
                            ("IDR", "Indonesian Rupiah"),
                            ("IRR", "Iranian Rial"),
                            ("IQD", "Iraqi Dinar"),
                            ("IEP", "Irish Pound"),
                            ("ILS", "Israeli New Shekel"),
                            ("ILP", "Israeli Pound"),
                            ("ILR", "Israeli Shekel (1980–1985)"),
                            ("ITL", "Italian Lira"),
                            ("JMD", "Jamaican Dollar"),
                            ("JPY", "Japanese Yen"),
                            ("JOD", "Jordanian Dinar"),
                            ("KZT", "Kazakhstani Tenge"),
                            ("KES", "Kenyan Shilling"),
                            ("KWD", "Kuwaiti Dinar"),
                            ("KGS", "Kyrgystani Som"),
                            ("LAK", "Laotian Kip"),
                            ("LVL", "Latvian Lats"),
                            ("LVR", "Latvian Ruble"),
                            ("LBP", "Lebanese Pound"),
                            ("LSL", "Lesotho Loti"),
                            ("LRD", "Liberian Dollar"),
                            ("LYD", "Libyan Dinar"),
                            ("LTL", "Lithuanian Litas"),
                            ("LTT", "Lithuanian Talonas"),
                            ("LUL", "Luxembourg Financial Franc"),
                            ("LUC", "Luxembourgian Convertible Franc"),
                            ("LUF", "Luxembourgian Franc"),
                            ("MOP", "Macanese Pataca"),
                            ("MKD", "Macedonian Denar"),
                            ("MKN", "Macedonian Denar (1992–1993)"),
                            ("MGA", "Malagasy Ariary"),
                            ("MGF", "Malagasy Franc"),
                            ("MWK", "Malawian Kwacha"),
                            ("MYR", "Malaysian Ringgit"),
                            ("MVR", "Maldivian Rufiyaa"),
                            ("MVP", "Maldivian Rupee (1947–1981)"),
                            ("MLF", "Malian Franc"),
                            ("MTL", "Maltese Lira"),
                            ("MTP", "Maltese Pound"),
                            ("MRU", "Mauritanian Ouguiya"),
                            ("MRO", "Mauritanian Ouguiya (1973–2017)"),
                            ("MUR", "Mauritian Rupee"),
                            ("MXV", "Mexican Investment Unit"),
                            ("MXN", "Mexican Peso"),
                            ("MXP", "Mexican Silver Peso (1861–1992)"),
                            ("MDC", "Moldovan Cupon"),
                            ("MDL", "Moldovan Leu"),
                            ("MCF", "Monegasque Franc"),
                            ("MNT", "Mongolian Tugrik"),
                            ("MAD", "Moroccan Dirham"),
                            ("MAF", "Moroccan Franc"),
                            ("MZE", "Mozambican Escudo"),
                            ("MZN", "Mozambican Metical"),
                            ("MZM", "Mozambican Metical (1980–2006)"),
                            ("MMK", "Myanmar Kyat"),
                            ("NAD", "Namibian Dollar"),
                            ("NPR", "Nepalese Rupee"),
                            ("ANG", "Netherlands Antillean Guilder"),
                            ("TWD", "New Taiwan Dollar"),
                            ("NZD", "New Zealand Dollar"),
                            ("NIO", "Nicaraguan Córdoba"),
                            ("NIC", "Nicaraguan Córdoba (1988–1991)"),
                            ("NGN", "Nigerian Naira"),
                            ("KPW", "North Korean Won"),
                            ("NOK", "Norwegian Krone"),
                            ("OMR", "Omani Rial"),
                            ("PKR", "Pakistani Rupee"),
                            ("XPD", "Palladium"),
                            ("PAB", "Panamanian Balboa"),
                            ("PGK", "Papua New Guinean Kina"),
                            ("PYG", "Paraguayan Guarani"),
                            ("PEI", "Peruvian Inti"),
                            ("PEN", "Peruvian Sol"),
                            ("PES", "Peruvian Sol (1863–1965)"),
                            ("PHP", "Philippine Peso"),
                            ("XPT", "Platinum"),
                            ("PLN", "Polish Zloty"),
                            ("PLZ", "Polish Zloty (1950–1995)"),
                            ("PTE", "Portuguese Escudo"),
                            ("GWE", "Portuguese Guinea Escudo"),
                            ("QAR", "Qatari Rial"),
                            ("XRE", "RINET Funds"),
                            ("RHD", "Rhodesian Dollar"),
                            ("RON", "Romanian Leu"),
                            ("ROL", "Romanian Leu (1952–2006)"),
                            ("RUB", "Russian Ruble"),
                            ("RUR", "Russian Ruble (1991–1998)"),
                            ("RWF", "Rwandan Franc"),
                            ("SVC", "Salvadoran Colón"),
                            ("WST", "Samoan Tala"),
                            ("SAR", "Saudi Riyal"),
                            ("RSD", "Serbian Dinar"),
                            ("CSD", "Serbian Dinar (2002–2006)"),
                            ("SCR", "Seychellois Rupee"),
                            ("SLL", "Sierra Leonean Leone"),
                            ("XAG", "Silver"),
                            ("SGD", "Singapore Dollar"),
                            ("SKK", "Slovak Koruna"),
                            ("SIT", "Slovenian Tolar"),
                            ("SBD", "Solomon Islands Dollar"),
                            ("SOS", "Somali Shilling"),
                            ("ZAR", "South African Rand"),
                            ("ZAL", "South African Rand (financial)"),
                            ("KRH", "South Korean Hwan (1953–1962)"),
                            ("KRW", "South Korean Won"),
                            ("KRO", "South Korean Won (1945–1953)"),
                            ("SSP", "South Sudanese Pound"),
                            ("SUR", "Soviet Rouble"),
                            ("ESP", "Spanish Peseta"),
                            ("ESA", "Spanish Peseta (A account)"),
                            ("ESB", "Spanish Peseta (convertible account)"),
                            ("XDR", "Special Drawing Rights"),
                            ("LKR", "Sri Lankan Rupee"),
                            ("SHP", "St. Helena Pound"),
                            ("XSU", "Sucre"),
                            ("SDD", "Sudanese Dinar (1992–2007)"),
                            ("SDG", "Sudanese Pound"),
                            ("SDP", "Sudanese Pound (1957–1998)"),
                            ("SRD", "Surinamese Dollar"),
                            ("SRG", "Surinamese Guilder"),
                            ("SZL", "Swazi Lilangeni"),
                            ("SEK", "Swedish Krona"),
                            ("CHF", "Swiss Franc"),
                            ("SYP", "Syrian Pound"),
                            ("STN", "São Tomé & Príncipe Dobra"),
                            ("STD", "São Tomé & Príncipe Dobra (1977–2017)"),
                            ("TVD", "TVD"),
                            ("TJR", "Tajikistani Ruble"),
                            ("TJS", "Tajikistani Somoni"),
                            ("TZS", "Tanzanian Shilling"),
                            ("XTS", "Testing Currency Code"),
                            ("THB", "Thai Baht"),
                            (
                                "XXX",
                                "The codes assigned for transactions where no currency is involved",
                            ),
                            ("TPE", "Timorese Escudo"),
                            ("TOP", "Tongan Paʻanga"),
                            ("TTD", "Trinidad & Tobago Dollar"),
                            ("TND", "Tunisian Dinar"),
                            ("TRY", "Turkish Lira"),
                            ("TRL", "Turkish Lira (1922–2005)"),
                            ("TMT", "Turkmenistani Manat"),
                            ("TMM", "Turkmenistani Manat (1993–2009)"),
                            ("USD", "US Dollar"),
                            ("USN", "US Dollar (Next day)"),
                            ("USS", "US Dollar (Same day)"),
                            ("UGX", "Ugandan Shilling"),
                            ("UGS", "Ugandan Shilling (1966–1987)"),
                            ("UAH", "Ukrainian Hryvnia"),
                            ("UAK", "Ukrainian Karbovanets"),
                            ("AED", "United Arab Emirates Dirham"),
                            ("UYW", "Uruguayan Nominal Wage Index Unit"),
                            ("UYU", "Uruguayan Peso"),
                            ("UYP", "Uruguayan Peso (1975–1993)"),
                            ("UYI", "Uruguayan Peso (Indexed Units)"),
                            ("UZS", "Uzbekistani Som"),
                            ("VUV", "Vanuatu Vatu"),
                            ("VES", "Venezuelan Bolívar"),
                            ("VEB", "Venezuelan Bolívar (1871–2008)"),
                            ("VEF", "Venezuelan Bolívar (2008–2018)"),
                            ("VND", "Vietnamese Dong"),
                            ("VNN", "Vietnamese Dong (1978–1985)"),
                            ("CHE", "WIR Euro"),
                            ("CHW", "WIR Franc"),
                            ("XOF", "West African CFA Franc"),
                            ("YDD", "Yemeni Dinar"),
                            ("YER", "Yemeni Rial"),
                            (
                                "YUN",
                                "Yugoslavian Convertible Dinar (1990–1992)",
                            ),
                            ("YUD", "Yugoslavian Hard Dinar (1966–1990)"),
                            ("YUM", "Yugoslavian New Dinar (1994–2002)"),
                            ("YUR", "Yugoslavian Reformed Dinar (1992–1993)"),
                            ("ZWN", "ZWN"),
                            ("ZRN", "Zairean New Zaire (1993–1998)"),
                            ("ZRZ", "Zairean Zaire (1971–1993)"),
                            ("ZMW", "Zambian Kwacha"),
                            ("ZMK", "Zambian Kwacha (1968–2012)"),
                            ("ZWD", "Zimbabwean Dollar (1980–2008)"),
                            ("ZWR", "Zimbabwean Dollar (2008)"),
                            ("ZWL", "Zimbabwean Dollar (2009)"),
                        ],
                        default="CAD",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, default_currency="CAD", max_digits=14
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, verbose_name="Grant Title"
                    ),
                ),
                (
                    "other_grant_agency",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Other Agency",
                    ),
                ),
                (
                    "pi_list",
                    models.CharField(
                        max_length=255, verbose_name="List of PIs"
                    ),
                ),
                (
                    "coi_list",
                    models.CharField(
                        max_length=255, verbose_name="List of Co-Is"
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "at_camh",
                    models.BooleanField(
                        default=False,
                        verbose_name="Grant administered at CAMH?",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GrantAgencyType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a grant agency type.",
                        max_length=50,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GrantCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a grant category.",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3),
                        ]
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Grant categories",
            },
        ),
        migrations.CreateModel(
            name="GrantReviewType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a publication role.",
                        max_length=50,
                        unique=True,
                        verbose_name="Review Committee Type",
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(2000),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GrantRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a grant role.",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(7),
                        ]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("full_name", models.CharField(max_length=255)),
                ("isi_listed", models.BooleanField(default=False)),
                (
                    "issn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "eissn",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "impact_factor",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0)
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LectureType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a lecture type.",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("title", models.CharField(max_length=255)),
                (
                    "chapter_title",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Chapter Title",
                    ),
                ),
                ("authors", models.CharField(max_length=255)),
                (
                    "chapter_authors",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Chapter Authors",
                    ),
                ),
                (
                    "publisher",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "isbn",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ISBN",
                    ),
                ),
                (
                    "other_journal_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Other Journal Name",
                    ),
                ),
                (
                    "volume",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "issue",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "start_page",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "end_page",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pub_month",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Month",
                    ),
                ),
                (
                    "pub_year",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Year",
                    ),
                ),
                (
                    "pmid",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="PMID",
                    ),
                ),
                ("is_epub", models.BooleanField(default=False)),
                (
                    "conf_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Conference Name",
                    ),
                ),
                (
                    "conf_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Conference Date"
                    ),
                ),
                (
                    "article_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.articletype",
                        verbose_name="Article Type",
                    ),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.journal",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PublicationRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a publication role.",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(4),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PublicationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a publication type.",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(800),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="last name"),
                ),
                (
                    "student_type",
                    models.IntegerField(
                        choices=[
                            (1, "Graduate Student"),
                            (2, "Research Fellow"),
                            (3, "Medical Student"),
                            (4, "Resident"),
                            (5, "Other"),
                        ]
                    ),
                ),
                ("other_student_type", models.CharField(max_length=50)),
                (
                    "resident_year",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "PGY-1"),
                            (2, "PGY-2"),
                            (3, "PGY-3"),
                            (4, "PGY-4"),
                            (5, "PGY-5"),
                            (6, "Graduated"),
                        ],
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupervisionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("weight", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="WorkFrequencyType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "days_equal",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=2,
                        unique=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supervision",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "other_student_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Other Student Name",
                    ),
                ),
                (
                    "hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "duration",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "frequency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.workfrequencytype",
                    ),
                ),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.student",
                        verbose_name="Student Name",
                    ),
                ),
                (
                    "supervision_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.supervisiontype",
                        verbose_name="Supervision Type",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Supervision",
            },
        ),
        migrations.CreateModel(
            name="PublicationLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="claims.publication",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.publicationrole",
                        verbose_name="Author Role",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Author",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="publication",
            name="pub_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="claims.publicationtype",
                verbose_name="Publication Type",
            ),
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "promoted_to",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.rank",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Lecture",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "other_lecture_type",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Other Lecture Type",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, verbose_name="Lecture Name"
                    ),
                ),
                (
                    "course_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Course Name/Course Code",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "hours",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        verbose_name="Hours (per lecture)",
                    ),
                ),
                (
                    "is_cash",
                    models.BooleanField(
                        default=False,
                        verbose_name="Did you receive an honorarium for this lecture?",
                    ),
                ),
                (
                    "is_series",
                    models.BooleanField(
                        default=False,
                        verbose_name="Was this lecture part of a series?",
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="End Date"
                    ),
                ),
                (
                    "num_sessions",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="# Sessions"
                    ),
                ),
                (
                    "lecture_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.lecturetype",
                        verbose_name="Lecture Type",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GrantReview",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "agency",
                    models.CharField(
                        max_length=100, verbose_name="Granting Agency"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Grant Name",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "is_member",
                    models.BooleanField(
                        default=False,
                        verbose_name="Are you a full member of this grant review committee?",
                    ),
                ),
                (
                    "num_days",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(25),
                        ],
                        verbose_name="# Days Attended",
                    ),
                ),
                (
                    "num_reviewed",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(99),
                        ],
                        verbose_name="# Grants Reviewed",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.grantreviewtype",
                        verbose_name="Grant Review Type",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GrantLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "grant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="claims.grant",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.grantrole",
                        verbose_name="Investigator Role",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Investigator",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GrantAgency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Enter a grant agency type.", max_length=50
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.grantcategory",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.grantagencytype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Grant agencies",
            },
        ),
        migrations.AddField(
            model_name="grant",
            name="agency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="claims.grantagency",
                verbose_name="Granting Agency",
            ),
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "other_exam_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Other Exam Type",
                    ),
                ),
                (
                    "other_student_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Other Student Name",
                    ),
                ),
                ("hours", models.DecimalField(decimal_places=2, max_digits=5)),
                ("date", models.DateField()),
                (
                    "exam_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.examtype",
                        verbose_name="Exam Type",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.student",
                        verbose_name="Student Name",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EditorialBoard",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "other_journal_name",
                    models.CharField(
                        blank=True,
                        help_text="Only required if 'Other' is selected from the Journal list.",
                        max_length=255,
                        verbose_name="Other Journal Name",
                    ),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="claims.journal",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cpa",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "cpa_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="CPA File",
                    ),
                ),
                (
                    "cpa_value",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3000),
                        ],
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "CPA",
            },
        ),
        migrations.CreateModel(
            name="CommitteeWork",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("name", models.CharField(max_length=100)),
                ("hours", models.IntegerField()),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Committee work",
            },
        ),
        migrations.CreateModel(
            name="Award",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "ver_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="",
                        verbose_name="Verification File",
                    ),
                ),
                (
                    "ver_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Verification URL"
                    ),
                ),
                (
                    "entry_type",
                    models.IntegerField(
                        choices=[
                            (1, "Self-report"),
                            (2, "Data entered from registry"),
                            (3, "Data entered and edited by physician"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "eligible",
                    models.IntegerField(
                        choices=[
                            (-2, "To confirm"),
                            (-1, "Not reviewed"),
                            (0, "Ineligible"),
                            (1, "Eligible"),
                        ],
                        default=-1,
                    ),
                ),
                ("decision_comments", models.TextField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Award Name"),
                ),
                ("organization", models.CharField(max_length=50)),
                (
                    "cash_prize",
                    models.BooleanField(
                        default=False,
                        verbose_name="Did you receive a cash prize?",
                    ),
                ),
                (
                    "award_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="award_level",
                        to="claims.awardlevel",
                        verbose_name="Award Level",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["award_level", "name"],
            },
        ),
    ]
