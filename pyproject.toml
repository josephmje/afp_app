[build-system]
requires = ["setuptools >= 45.0", "wheel", "setuptools_scm[toml] >= 6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "afp/_version.py"
write_to_template = """\
\"\"\"Version file, automatically generated by setuptools_scm.\"\"\"
__version__ = "{version}"
"""
fallback_version = "0.0"

[project]
name = "afp_app"
description = "A Django application for physicians to enter merit-based activities."
readme = "README.md"
author = "Michael Joseph"
author_email = "josephmje.22@gmail.com"
requires-python = ">=3.8"
keywords = []
license = {text = "MIT"}
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django :: 4.1",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "argon2-cffi==21.3.0",
    "Django==4.2.6",
    "django-cleanup==6.0.0",
    "django-environ==0.9.0",
    "django-extensions==3.2.1",
    "django-model-utils==4.3.1",
    "django-money==3.0.0",
    "django-widget-tweaks==1.4.12",
    "django-crispy-forms==1.14.0",
    "crispy-bootstrap5==0.6",
    "gunicorn==20.1.0",
    "psycopg2==2.9.5",
    "whitenoise=6.2.0",
]

dynamic = ["version"]

[project.optional-dependencies]
test = [
    "mypy==0.982",
    "django-stubs==1.12.0",
    "pytest==7.2.0",
    "pytest-django==4.5.2",
    "pytest-sugar==0.9.6",
]

develop = [
    "django-debug-toolbar==3.7.0",
]

production = [
    "google-cloud-secret-manager==2.12.6",
    "google-auth==2.15.0",
    "django-storages[google]==1.13.1",
]

style = [
    "black==22.10.0",
    "flake8==6.0.0",
    "flake8-isort==5.0.3",
    "flake8-pyproject",
    "pycodestyle",
    "pylint",
    "pylint-django==2.5.3",
]

all = [
    "afp_app[style]",
    "afp_app[develop]",
    "afp_app[production]",
]

[tool.flake8]
max-line-length = 79
doctests = false
select = ["C", "E", "F", "W", "B"]
extend-exclude = [
  "*build/",
  "docs/",
  "*dist/",
]

count = true

[tool.black]
line-length = 79
include = ".pyi?$"
exclude = [
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    "migrations",
]

[tool.isort]
force_grid_wrap = 0
use_parentheses = true
combine_as_imports = true
include_trailing_comma = true
line_length = 79
multi_line_output = 3
skip = "migrations"
default_section = "THIRDPARTY"
known_first_party = "afp"
known_django = "django"
sections = [
    "FUTURE",
    "STDLIB",
    "DJANGO",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

[tool.pytest.ini_options]
addopts = "-v --doctest-modules"
testpaths = ["tests"]

[tool.pylint.main]
fail-under = 7

[tool.pylint."messages control"]
disable = [
  "logging-format-interpolation"
]
